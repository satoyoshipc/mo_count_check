<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

	<!--[if lt IE 9]>
		<script src="codebase/html5shiv-printshiv.js"></script>	
	<![endif]-->

<title>"<%= unescape(title) %>";</title>
<link rel='stylesheet' href='/stylesheets/style.css' />
<script src="javascripts/javascript.js" type="text/javascript" charset="utf-8"></script>

<script src="codebase/dhtmlxcommon.js" type="text/javascript" charset="utf-8"></script>
<script src="codebase/dhtmlxgrid.js" type="text/javascript" charset="utf-8"></script>
<script src="codebase/dhtmlxgridcell.js" type="text/javascript" charset="utf-8"></script>
<script src="codebase/dhtmlxdataprocessor.js" type="text/javascript" charset="utf-8"></script>
<script src="codebase/ext/dhtmlxgrid_nxml.js" type="text/javascript" charset="utf-8"></script>
<script src="codebase/excells/dhtmlxgrid_excell_link.js" type="text/javascript" charset="utf-8"></script>
<script src="codebase/excells/dhtmlxgrid_excell_cntr.js" type="text/javascript" charset="utf-8"></script>
<script src="codebase/ext/dhtmlxgrid_srnd.js" type="text/javascript" charset="utf-8"></script>
<script src="codebase/ext/dhtmlxgrid_filter.js" type="text/javascript" charset="utf-8"></script>
<link rel="stylesheet" href="codebase/dhtmlxgrid.css" type="text/css" media="screen" title="no title" charset="utf-8">
<link rel="stylesheet" href="codebase/skins/dhtmlxgrid_dhx_skyblue.css" type="text/css" media="screen" title="no title" charset="utf-8">
<script src="codebase/jquery/jquery-1.10.2.min.js" type="text/javascript"></script>
<script src="codebase/jquery/jquery.ui.core.js"></script>
<script src="codebase/jquery/jquery.ui.widget.js"></script>
<script src="codebase/jquery/jquery.ui.tabs.js"></script>
<link rel="stylesheet" href="codebase/jquery/themes/tabstyle.css">

<script src="codebase/Highstock-1.3.7/js/highstock.js" type="text/javascript"></script>

<script src="codebase/exporting.js"></script>

<script src="codebase/canvg/canvg.js" type="text/javascript" charset="utf-8"></script>
<script src="codebase/canvg/rgbcolor.js" type="text/javascript" charset="utf-8"></script>


<script type="text/javascript">


function utc2dateString(utc_msec) {
	d=new Date();
	d.setTime(utc_msec);
  
	var year  = d.getFullYear();
	var month = d.getMonth() + 1;
	var day   = d.getDate();
	var hour  = ( d.getHours()   < 10 ) ? '0' + d.getHours()   : d.getHours();
	var min   = ( d.getMinutes() < 10 ) ? '0' + d.getMinutes() : d.getMinutes();
	var sec   = ( d.getSeconds() < 10 ) ? '0' + d.getSeconds() : d.getSeconds();
  
	return  month + '/' + day  ;
}
function detailDownload(pid,customerid){
	var quote = document.getElementById('quote'+ pid).checked;
	var csvtitle =document.getElementById('labels'+ pid).checked;
	
	location.href='/download?downloadid=' + pid + '&quote=' + quote + '&labels=' + csvtitle + '&customerid=' + customerid ;
}
$(function () {
	var servername;

	var customer_name = "<%= unescape(title) %>";
    $.getJSON('charts?customerid=' + <%= customerid %>, function(data) {

        var line1 = [];
        var line2 = [];
        var line3 = [];
        var line4 = [];
        var line5 = [];
        var line6 = [];
        var line7 = [];
        var line8 = [];
        var line9 = [];
        var line10 = [];
        var line11 = [];
        var line12 = [];
        var line13 = [];
        var line14 = [];
        var line15 = [];

		//var obj = jQuery.parseJSON(data);
		var obj = data;
        var dataLength = obj.length;
		
        for (var i = 0; i < dataLength; i++) {

			line1.push([
				parseInt(obj[i].date), // Filling of Array after Ajax Call
				parseInt(obj[i].mo_all) // Filling of Array after Ajax Call
			]);
            line2.push([
				parseInt(obj[i].date), 
				parseInt(obj[i].mib_all_work) 
            ]);

            line3.push([
				parseInt(obj[i].date), 
				parseInt(obj[i].mib_all_pend) 
            ]);

            line4.push([
				parseInt(obj[i].date), 
				parseInt(obj[i].trap_all_work) 
            ]);
            line5.push([
				parseInt(obj[i].date), 
				parseInt(obj[i].trap_all_pend) 
            ]);
            line6.push([
				parseInt(obj[i].date), 
				parseInt(obj[i].ping_work) 
            ]);
            line7.push([
				parseInt(obj[i].date), 
				parseInt(obj[i].ping_pend) 
            ]);
            line8.push([
				parseInt(obj[i].date), 
				parseInt(obj[i].dummy_all_work) 
            ]);
            line9.push([
				parseInt(obj[i].date), 
				parseInt(obj[i].dummy_all_pend) 
            ]);
            line10.push([
				parseInt(obj[i].date), 
				parseInt(obj[i].disconnect_inactive) 
            ]);
            line11.push([
				parseInt(obj[i].date), 
				parseInt(obj[i].mib_audit_work) 
            ]);
            line12.push([
				parseInt(obj[i].date), 
				parseInt(obj[i].mib_audit_pend) 
            ]);
            line13.push([
				parseInt(obj[i].date), 
				parseInt(obj[i].trap_audit_work) 
            ]);
            line14.push([
				parseInt(obj[i].date), 
				parseInt(obj[i].trap_audit_pend) 
            ]);
			
			servername = obj[i].server_id + '号機';

		}

		Highcharts.setOptions({
				  global: {  // グローバルオプション
				useUTC: false   // GMTではなくJSTを使う
			  },
			  lang: {  // 言語設定
				rangeSelectorZoom: '表示範囲',
				resetZoom: '表示期間をリセット',
				resetZoomTitle: '表示期間をリセット',
				rangeSelectorFrom: '表示期間',
				rangeSelectorTo: '～',
				printButtonTitle: 'チャートを印刷',
				exportButtonTitle: '画像としてダウンロード',
				downloadJPEG: 'JPEG画像でダウンロード',
				downloadPDF: 'PDF文書でダウンロード',
				downloadPNG: 'PNG画像でダウンロード',
				downloadSVG: 'SVG形式でダウンロード',
				months: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],
				weekdays: ['日', '月', '火', '水', '木', '金', '土'],
				numericSymbols: null   // 1000を1kと表示しない
			  }
		});
		
			
		window.chart = new Highcharts.StockChart({
           chart: {
                renderTo: 'container',
				zoomType: 'x'
            },

            scrollbar: {
                enabled: false
            },

            rangeSelector: {
                selected: 1
            },

            yAxis: {
                lineWidth: 0,
                offset: 10,
                labels: {
                    align: 'right',
                    x: -3,
                    y: 6
                },
                plotLines : [{
                    value : 100,
                    color : 'red',
                    dashStyle : 'shortdash',
                    width : 2
                }]
            },

            legend: {
                enabled: true,
                align: 'right',
                layout: 'vertical',
                verticalAlign: 'top',
                y: 100
            },
		    tooltip: {
				formatter: function(){ 
					d = utc2dateString(this.x);
					return d + '<br/>' + '<span style="color:'+this.series.color+'">'+ this.series.name +'</span>: '+ this.y ;
				 },
				crosshairs: true,
		        valueSuffix: '件',
				
		        shared: false
		    },
            navigator : {
                enabled : true
            },
		    title: {
		        text: customer_name
		    },
		    subtitle: {
		        text: servername
		    },
			xAxis: [{  // X軸
				labels: {
					formatter: function(){ return utc2dateString(this.value); }
				}
			}],
		    yAxis: {
		        title: {
		            text: '件数'
		        }
		    },

			exporting: {
				enabled: false,
				url: 'charts?customerid=' + <%= customerid %>,
				buttons: {
					contextButton: {
						menuItems: [{
							text: 'Print',
							onclick: function() {
								this.print();
							}
						}, {
							text: 'Save as PNG',
							onclick: function() {

								var obj = {},
									chart;
								
								chart = $('#container').highcharts();
								obj.svg = chart.getSVG();
								obj.type = 'image/png';
								obj.width = 450; 
								obj.async = true;
								
								
								$.ajax({
									type: 'get',
									url: "charts?customerid=10007",        
									//data: obj, 
									success: function (data) {
										var exportUrl = this.url,
											imgContainer = $("#imgContainer");
										$('<img>').attr('src', exportUrl + data).attr('width','250px').appendTo(imgContainer);
										$('<a>or Download Here</a>').attr('href',exportUrl + data).appendTo(imgContainer);
										$('img').fadeIn();
									}        
								});							
							
							
							
							
							
							
							
							
							
							},
							separator: false
						}]
					}
				}
			},
			

			credits: {  // 右下のクレジット
				enabled: false
			},

			
            series: [{
                name: 'mo_all',
                data: line1,
                type: 'area'
            },{
                name: 'mib_all_work',
                data: line2,
                type: 'area'
            },{
                name: 'mib_all_pend',
                data: line3,
                type: 'area'
            },{
                name: 'trap_all_work',
                data: line4,
                type: 'area'
            },{
                name: 'trap_all_pend',
                data: line5,
                type: 'area'
            },{
                name: 'ping_work',
                data: line6,
                type: 'area'
            },{
                name: 'ping_pend',
                data: line7,
                type: 'area'
            },{
                name: 'dummy_all_work',
                data: line8,
                type: 'area'
            },{
                name: 'dummy_all_pend',
                data: line9,
                type: 'area'
            },{
                name: 'disconnect_inactive',
                data: line10,
                type: 'area'
            },{
                name: 'mib_audit_work',
                data: line11,
                type: 'area'
            },{
                name: 'mib_audit_pend',
                data: line12,
                type: 'area'
            },{
                name: 'trap_audit_work',
                data: line13,
                type: 'area'
            },{
                name: 'trap_audit_pend',
                data: line14,
                type: 'area'
            }]
		
		});
    });
    
});

(function (H) {
    H.Chart.prototype.createCanvas = function (divId) {
        var svg = this.getSVG(),
            width = parseInt(svg.match(/width="([0-9]+)"/)[1]),
            height = parseInt(svg.match(/height="([0-9]+)"/)[1]),
            canvas = document.createElement('canvas');
        
        canvas.setAttribute('width', width);
        canvas.setAttribute('height', height);
        
        if (canvas.getContext && canvas.getContext('2d')) {
        
            canvg(canvas, svg);
            
            var image = canvas.toDataURL("image/png")
                .replace("image/png", "image/octet-stream"); 
			alert(image);
            // Save locally
            window.location.href = image;
        }else {
            alert ("対応しているブラウザをしようして下さい。");
        }
        
    }
}(Highcharts));

</script>
<script type="text/javascript" charset="utf-8">
    function init() {
        mygrid = new dhtmlXGridObject("grid_detail");
        mygrid.setImagePath("codebase/imgs/");
			
        mygrid.setHeader("No,日時,mo_all,mib,#cspan,trap,#cspan,ping,#cspan,dummy,#cspan,disconnect_inactive,mib_audit,#cspan,trap_audit,#cspan");
		mygrid.attachHeader(["#rspan","#rspan","#rspan", "work","pend","work","pend","work","pend","work","pend","#rspan", "work","pend", "work","pend"]);

		mygrid.attachEvent("onKeyPress", onKeyPressed);
		mygrid.enableMultiselect(true);

		mygrid.attachHeader("&nbsp;,#select_filter,#select_filter,#select_filter,#select_filter,#select_filter,#select_filter,#select_filter,#select_filter,#select_filter,#select_filter,#select_filter,#select_filter,#select_filter,#select_filter,#select_filter");
        mygrid.setColumnIds("no,date,mo_all,mib_all_work,mib_all_pend,trap_all_work,trap_all_pend,ping_work,ping_pend,dummy_all_work,dummy_all_pend,disconnect_inactive,mib_audit_work,mib_audit_pend,trap_audit_work,trap_audit_pend");
		mygrid.setColAlign("right,left,right,right,right,right,right,right,right,right,right,right,right,right,right,right");
        mygrid.setInitWidths("30,110,50,70,70,70,70,70,70,70,70,70,70,70,70,70");
        mygrid.setColTypes("ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro");
        mygrid.setColSorting("int,str,int,int,int,int,int,int,int,int,int,int,int,int,int,int");
        mygrid.setSkin("dhx_skyblue");
        mygrid.init();
		mygrid.load("/detail?" + "customerid=" + <%= customerid %>,"js");

		
	}

function onKeyPressed(code, ctrl, shift) {
	if (code == 67 && ctrl) {
		mygrid.rowToClipboard();
		mygrid.setCSVDelimiter(",");
	}
	return true;
}



</script>

</head>
<body onload="init();">
		<%= unescape(title) %>
		<div id="grid_detail" style="width:100%; height:500px;"></div>
		<td valign="top" width="400px">			
		出力設定:<br>
		<input id="quote100" type="checkbox" checked="true" /> ダブルクォテーションで囲む
		<br />
		<input id="labels100" type="checkbox" checked="true" /> 1行目に項目名を入れる
		<br />
		<input value=" 出力 " onclick="detailDownload( 100 , <%= customerid %> );" type="button">
		</td>
		<br />
        <div id="container" style="width: 100%; height: 400px;"></div>
		<div id="imgContainer"></div>	
</body>
</html>